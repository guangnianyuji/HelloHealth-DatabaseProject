<style scoped>
/*侧边容器栏的设置*/
.asideField{
  margin-bottom:40px;
}
/*侧边容器中的Logo部分的文字*/
.logoField .text{
  font-size: x-large;
  color: #409eff;
  font-family: SimSun;
  font-weight: bolder;
  margin-top: 20px;
  padding-bottom: 5px;
  border-bottom: #5c2705 solid;
  width: 250px;
  margin-left: 75px;
}
/*侧边容器的图片设置*/
.logoField .pic{
  margin-top: 15px;
}
/*侧边新闻卡片部分的样式*/
.cardField{
  margin-top: 20px;
}
/*新闻卡片内容的样式设置*/
.card{
  margin-bottom: 10px;
  margin-left: 25px;
}
/*新闻信息版块的样式*/
.contentField{
  background-color: white;
  min-height: 760px;
  border-radius:10px;
}
/*新闻文字内容部分的样式*/
.contentMain{
  width:80%;
  margin-left: 10%;
  text-align:left;
  padding-bottom: 50px;
  white-space: pre-line;
}
/*新闻信息大标题的样式*/
.title{
  font-size:xx-large;
  color:#409eff;
  font-family:SimSun;
  font-weight:bolder;;
  margin-bottom:15px;
}
/*最外层的侧边容器的样式设置*/
.asideField{
  margin-bottom: 40px;
}
</style>

<template>
  <div class="common-layout">
    <el-container>  <!--大容器，包括一个侧边容器和一个主容器-->
      <el-aside width="400px" class="asideField">
        <el-affix :offset="1" target=".asideField">
          <div class="logoField">
            <div class="logoField">
              <div class="label">发布单位</div>
              <div class="logo">
                <img src="HelloHealth" style="height: 90px" />  <!--此处需要在当前目录下放入HelloHealth图片-->
              </div>
            </div>
            <div class="cardField">
              <div
                class = "card"
                v-for= "news in this.news_relevant.slice(0,3)"
                :key="news"
                >
                <news-info-board : new_infp="news"></news-info-board>
              </div>
            </div>
          </div>
        </el-affix>
      </el-aside>

      <el-main>
        <div class="contentField">
          <div class=“common-layout”>
            <el-container>
              <el-aside width="75%">
                <div class="content_header">
                  <p class="title">
                    {{this.news_info.NewsFlashTitle}}   //新闻信息的标题
                  </p>
                  <el-row gutter="10" justify="center" style="width:100%">
                    <el-col span="1">
                      <el-tag class="ml-2" type="success" size="large">{{
                        this.news_info.NewsFlashRegion
                        }}</el-tag>
                    </el-col>
                    <el-col span="1" v-for="tag in new_tags" :key="tag">
                      <el-tag class="ml-2" type="warning" size="large">{{
                          tag
                        }}</el-tag>
                    </el-col>
                  </el-row>
                </div>
              </el-aside>
              <el-main>
                <img src="illustration.png" style="height: 80px" />  <!--此处需要在当前目录下插入illustration图片-->
              </el-main>
            </el-container>
          </div>
          <el-divider />
          <div class="contentMain" v-loading.fullscreen.lock="oss_loading">
            <p v-html="this.news_info.NewsFlashContent"></p>
          </div>
        </div>
      </el-main>
    </el-container>
  </div>
</template>

<script>
import NewsInfoBoard from "../components/NewsInfoBoarder.vue";  //此处要进行更改，，本质是新闻的卡片页面路径，点击某新闻的卡片可进入本页面
import axios from "axios"
export default {
  name: "NewsPage",
  components: {
    NewsInfoBoard,    //此处或许要更改
  },
  data() {
    return {
      news_info:"",
      news_relevant:[],  //存储相关快讯信息
      news_id:"",
      news_tag:[],
      oss_loading:false,
    }
  },
  methods:{
    getParams() {
      this.news_id = this.$route.query.news_id;    //此处可能需要更改
      //在此处向服务器请求数据，给所需变量重新赋值
      this.oss_loading=true;   //表示正在加载相关数据
      axios
          .get("spring/admin/newsflash/single" + "?newsflash_id=" + this.news_id)    //此处可能需要更改
          .then((res) => {
            this.news_info = res.data.data;
            this.new_tags = [].concat(res.data.data.NewsFlashTag.split("-"));
            this.news_info.NewsFlashDate = this.news_info.NewsFlashDate.substring(
                0,
                this.news_info.NewsFlashDate.indexOf(" ")    //处理新闻日期格式
            );
            const xhrFile = new XMLHttpRequest();
            console.log("开始解析oss");
            xhrFile.open("GET", this.news_info.NewsFlashContent, true);
            xhrFile.send();
            xhrFile.onload = () => {
              //res.data.data.blog_content=xhrFile.response;
              this.news_info.NewsFlashContent = xhrFile.response;
              console.log("oss解析完成");
              this.oss_loading=false;    //解析完成
            };
          })
          .catch((errMsg) => {     //若出现错误，则在控制台打印错误信息
            console.log(errMsg);
          });
    },
  },
  watch:{   //监视器功能，监听数据的变化并触发相应的回调函数
    $route(to, from) {     //在路由发生变化时调用getParams，以获取新的参数并更新相关的数据
      this.getParams();
    },
  },
  //mounted(){
    // 根据上一页的路由传过来的news_id加载对应的信息
    //const flashId = this.$route.params.news_id;
    //发起请求或执行相应的操作来加载数据
    //然后将加载的数据赋值给localData
    //this.loadedDate = fetchData(flashId);//此处的fetchData是一个自定义的函数，用于加载数据
  //}

  created() {
    //在此处向服务器请求数据，初始化所需变量
    this.getParams();

    axios
        .get("spring/admin/newsflash/all")    //需要更改，请求获取所有的快讯信息
        .then((res) => {
          this.news_relevant = [].concat(res.data.data.newsflashs.filter(   //用.filter过滤掉newsflashs数组中与当前新闻ID不匹配的项目
              (news) => news.NewsFlashId != this.news_id
          ));
        })
        .catch((errMsg) => {
          console.log(errMsg);
        });
  },
}
</script>

